services:
  web:
    build: .
    container_name: fastapi_app
    command: uvicorn src.main:src --host 0.0.0.0 --port 8000
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "8000:8000"
    volumes:
      - .:/src
    networks:
      - shortist_network

#  migrations:
#    build: .
#    container_name: migrations_runner
#    command: alembic upgrade head
#    env_file:
#      - .env
#    volumes:
#      - .:/src
#    networks:
#      - shortist_network
#    depends_on:
#      postgres:
#        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shortist_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - shortist_network

volumes:
  postgres_data:

networks:
  shortist_network:
    driver: bridge
